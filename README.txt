▎Счётчик вызовов

Данный проект реализует функциональность для отслеживания количества вызовов функций в Python. В нем представлены три основные функции, каждая из которых выполняет свою задачу, а также ведет подсчет общего числа вызовов.

▎Описание функций

1. count_calls:
   - Подсчитывает количество вызовов других функций и обновляет глобальную переменную calls.

2. string_info:
   - Принимает строку в качестве аргумента и возвращает кортеж, содержащий:
     - Длину строки
     - Строку в верхнем регистре
     - Строку в нижнем регистре
   - Каждый вызов этой функции увеличивает счетчик вызовов.

3. is_contains:
   - Принимает два аргумента: строку и список.
   - Проверяет, содержится ли строка в списке (без учета регистра).
   - Возвращает True, если строка найдена, и False в противном случае.
   - Каждый вызов этой функции также увеличивает счетчик вызовов.

▎Установка

Для запуска проекта просто скопируйте код в файл Python (.py) и выполните его с помощью интерпретатора Python.

▎Пример использования

# Пример выполняемого кода
print(string_info('Capybara'))
print(string_info('Armageddon'))
print(is_contains('Urban', ['ban', 'BaNaN', 'urBAN']))  # Urban ~ urBAN
print(is_contains('cycle', ['recycling', 'cyclic']))    # No matches
print(calls)  # Выводит общее количество вызовов


▎Ожидаемый вывод:

(8, 'CAPYBARA', 'capybara')
(10, 'ARMAGEDDON', 'armageddon')
True
False
4


▎Примечания

- Для использования глобальной переменной внутри функции используйте оператор global.
- Рекомендуется приводить искомую строку и все строки в списке к одному регистру для корректного сравнения в функции is_contains.
оект распространяется под лицензией MIT. Вы можете свободно использовать и модифицировать код по своему усмотрению.